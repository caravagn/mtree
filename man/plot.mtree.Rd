% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S3_plot.R
\name{plot.mtree}
\alias{plot.mtree}
\title{Plot a \code{mtree} tree.}
\usage{
\method{plot}{mtree}(x,
  node_palette = colorRampPalette(RColorBrewer::brewer.pal(n = 9,
  "Set1")), tree_layout = "tree", ...)
}
\arguments{
\item{x}{A \code{mtree} tree.}

\item{node_palette}{A function that applied to a number will return a set of colors.
By default this is a \code{colorRampPalette} applied to 9 colours of the \code{RColorBrewer}
palette \code{Set1}. Colors are generated following a topological sort of the information
transfer, which is obtained from \code{igraph}.}

\item{tree_layout}{A layout that can be used by \code{tidygraph}, which wraps \code{igraph}'s
layouts. By default this is a `tree` layout.}

\item{...}{Extra S3 parameters}
}
\value{
A \code{ggplot} plot of the tree.
}
\description{
This S3 method plots a \code{mtree} tree, using \code{ggraph} layout
functions. The tree is annotated and coloured in each node (i.e.,
cluster) that contain a driver event annotated. The driver id is also
reported via \code{ggrepel} annotation functions.
}
\examples{
data(mtree_input)

x = mtrees(
mtree_input$binary_clusters, 
mtree_input$drivers,
mtree_input$samples,
mtree_input$patient,
mtree_input$sspace.cutoff,
mtree_input$n.sampling,
mtree_input$store.max
)
   
plot(x[[1]])
}
